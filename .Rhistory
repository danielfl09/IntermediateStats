ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_point() +
scale_x_continuous(breaks = seq(0,0.8,by=0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
install.packages("scales")
install.packages("scales")
install.packages("scales")
library(scales)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_point() +
scale_x_continuous(breaks = seq(0,0.8,by=0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
library(tidyverse)
library(leaflet)
library(ggrepel)
library(scales)
Rent <- read_csv("./Data/Rent.csv") %>%
na.omit() %>%
mutate(
Size = case_when(
Capacity < 50 ~ "Small",
Capacity < 100 ~ "Medium",
TRUE ~ "Large"
)
)
### Distance ~ Price ~ Gender
CheapNClose <-
Rent %>%
filter(Gender == "F") %>%
filter(Price < quantile(Rent$Price, 0.30)) %>%
filter(MilesToCampus < quantile(Rent$MilesToCampus, 0.30))
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_point() +
scale_x_continuous(breaks = seq(0,0.8,by=0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
?scales
library(scales)
install.packages("scales")
install.packages("scales")
library(tidyverse)
library(leaflet)
library(ggrepel)
library(scales)
Rent <- read_csv("./Data/Rent.csv") %>%
na.omit() %>%
mutate(
Size = case_when(
Capacity < 50 ~ "Small",
Capacity < 100 ~ "Medium",
TRUE ~ "Large"
)
)
### Distance ~ Price ~ Gender
CheapNClose <-
Rent %>%
filter(Gender == "F") %>%
filter(Price < quantile(Rent$Price, 0.30)) %>%
filter(MilesToCampus < quantile(Rent$MilesToCampus, 0.30))
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_point() +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_jitter() +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_jitter() +
geom_smoothe(se = FALSE) +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_jitter() +
geom_smooth(se = FALSE) +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_jitter() +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
install.packages("plotly")
install.packages("plotly")
library(plotly)
library(scales)
library(tidyverse)
library(leaflet)
library(ggrepel)
Rent %>% plot_ly(x = MilesToCampus, y = Price)
View(Rent)
Rent <- read_csv("./Data/Rent.csv") %>%
na.omit() %>%
mutate(
Size = case_when(
Capacity < 50 ~ "Small",
Capacity < 100 ~ "Medium",
TRUE ~ "Large"
)
)
Rent %>% plot_ly(x = MilesToCampus, y = Price)
View(Rent)
Rent %>% plot_ly(x = ~MilesToCampus, y = ~Price)
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
text = ~paste("Apartment: ", Apartment,
"$<br>Price: ", Price,
"$<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
size = ~Capacity,
colot = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
size = ~Capacity,
color = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
mode = scatter,
size = ~Capacity,
color = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
mode = scatterplot,
size = ~Capacity,
color = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
mode = "scatter",
size = ~Capacity,
color = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
library(tidyverse)
library(mosaic)
olympic <- read_csv("./Data/Olympics.csv")
glimpse(olympic)
mPlot(olympic)
View(olympic)
olympic[is.na(olympic)] <- "no medal"
View(olympic)
medal_summ <-
olympic %>%
group_by(~Name, ~Year) %>%
summarise(
Gold = sum(case_when(Medal == "Gold"))
)
medal_summ <-
olympic %>%
group_by(Name, Year) %>%
summarise(
Gold = sum(case_when(Medal == "Gold"))
)
medal_summ <-
olympic %>%
group_by(Name, Year) %>%
summarise(
Gold = sum(Medal == "Gold")
)
View(olympic)
View(medal_summ)
medal_summ <-
olympic %>%
group_by(Name, Year) %>%
summarise(
Gold = sum(Medal == "Gold"),
Silver = sum(Medal == "Silver"),
Bronze = sum(Medal == "Bronze"),
"No Medal" = sum(Medal == "no medal")
)
View(medal_summ)
medal_summ <-
left_join(olympic, by = Name)
medal_summ <-
left_join(olympic, by = c(medal_summ$Name = olympic$Name))
medal_summ <-
left_join(olympic, by = "Name")
medal_summ <-
left_join(medal_summ, olympic, by = "Name")
View(medal_summ)
olympic <- read_csv("./Data/Olympics.csv")
olympic$Medal[is.na(olympic$Medal)] <- "no medal"
medal_summ <-
olympic %>%
group_by(Name, Year) %>%
summarise(
Gold = sum(Medal == "Gold"),
Silver = sum(Medal == "Silver"),
Bronze = sum(Medal == "Bronze"),
"No Medal" = sum(Medal == "no medal")
)
View(medal_summ)
ideal <-
olympic %>%
select(ID, Sex, Age, Height, Weight, Sport, Medal)
View(ideal)
ideal <-
olympic %>%
select(ID, Sex, Age, Height, Weight, Sport, Medal) %>%
na.omit()
View(ideal)
ideal <-
olympic %>%
select(ID, Sex, Age, Height, Weight, Sport, Medal) %>%
na.omit() %>%
mutate(Medal_pts = case_when(
Medal == "Gold" ~ 3,
Medal == "Silver" ~ 2,
Medal == "Bronze" ~ 1,
TRUE ~ 0
))
mPlot(ideal)
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library(tidyverse)
library(mosaic)
library(reshape2)
# Create a Correlation matirx
# Following example found here: "http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization"
olympic <- read_csv("./Data/Olympics.csv")
View(ideal)
olympic$Medal[is.na(olympic$Medal)] <- "no medal"
ideal <-
olympic %>%
select(ID, Sex, Age, Height, Weight, Sport, Medal) %>%
na.omit() %>%
mutate(Medal_pts = case_when(
Medal == "Gold" ~ 3,
Medal == "Silver" ~ 2,
Medal == "Bronze" ~ 1,
TRUE ~ 0
))
cormat <- round(cor(ideal),2)
cor_data <-
ideal %>%
select(Age, Height, Weight, Medal_pts)
cormat <- round(cor(cor_data),2)
head(cormat)
melted_cormat <- melt(cormat)
head(melted_cormat)
# Get lower triangle of the correlation matrix
get_lower_tri <- function(cormat){
cormat[upper.tri(cormat)] <- NA
return(cormat)
}
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)] <- NA
return(cormat)
}
upper_tri <- get_upper_tri(cormat)
melted_cormat <- melt(upper_tri, na.rm = TRUE)
?mtcars
View(ideal)
View(olympic)
?coord_fixed
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(0.1, 0.1),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(1, 0.5),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(2, 0.5),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(1.2, 0.5),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(1.3, 0.5),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(0.75, 0.75),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(0.25, 0.75),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(legend.justification = c(1, 0),
legend.position = c(0.40, 0.75),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.40, 0.75),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, label = value), color = "black") +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.40, 0.75),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
geom_text(aes(label = value), color = "black") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.40, 0.75),
legend.direction = "horizontal") +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed()
