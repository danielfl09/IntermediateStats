ggplot() +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
theme_bw()
# Faceted Density Plot
ggplot() +
geom_pointy(data = rail.scale,
aes(x = hightemp, volume)) +
theme_bw()
# Faceted Density Plot
ggplot() +
geom_point(data = rail.scale,
aes(x = hightemp, volume)) +
theme_bw()
# Faceted Density Plot
ggplot() +
geom_point(data = rail.scale,
aes(x = hightemp, volume)) +
geom_smooth(se = FALSE) +
theme_bw()
# Faceted Density Plot
ggplot() +
geom_point(data = railtrail,
aes(x = hightemp, volume)) +
geom_smooth(se = FALSE) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot() +
geom_point(aes(x = hightemp, volume)) +
geom_smooth(se = FALSE) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot() +
geom_point(aes(x = hightemp, y = volume)) +
geom_smooth(se = FALSE) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot() +
geom_point(aes(x = hightemp, y = volume)) +
geom_smooth(aes(x = hightemp, y = volume), se = FALSE) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = hightemp, y = volume)) +
geom_point() +
geom_smooth(se = FALSE) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = volume, y = hightemp)) +
geom_point() +
geom_smooth(se = FALSE) +
scale_x_continuous(breaks = seq(min(railtrail$hightemp),
max(railtrail$hightemp),
by = 10)) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = volume, y = hightemp)) +
geom_point() +
geom_smooth(se = FALSE) +
scale_y_continuous(breaks = seq(min(railtrail$hightemp),
max(railtrail$hightemp),
by = 10)) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = volume, y = hightemp)) +
geom_point() +
geom_smooth(se = FALSE) +
scale_y_continuous(breaks = seq(40,100,by = 10)) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = volume, y = hightemp)) +
geom_point() +
geom_smooth(se = FALSE) +
scale_y_continuous(breaks = seq(40,110,by = 10)) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = volume, y = hightemp)) +
geom_point() +
geom_smooth(se = FALSE) +
scale_y_continuous(breaks = seq(40,10,by = 10)) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = volume, y = hightemp)) +
geom_point() +
geom_smooth(se = FALSE) +
scale_y_continuous(breaks = seq(40,100,by = 10)) +
theme_bw()
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = volume, y = hightemp)) +
geom_point() +
geom_smooth(se = FALSE) +
scale_y_continuous(breaks = seq(40,100,by = 10)) +
scale_x_continuous(breaks = seq(100,800,by = 100)) +
theme_bw()
# Student's t-Test
pander(t.test(railtrail$volume, railtrail$hightemp, mu = 0, alternative = "two.sided"))
library(tidyverse)
library(mosaic)
library(reshape2)
library(plotly)
library(pander)
railtrail <- RailTrail %>%
mutate(
Weekday = case_when(
dayType == "weekday" ~ 1,
TRUE                 ~ 0
),
Weekend = case_when(
dayType == "weekend" ~ 1,
TRUE                 ~ 0
)
) %>%
select(-c(weekday, dayType))
?RailTrail
?RailTrail
# Faceted Density Plot
railtrail %>%
ggplot(aes(x = volume, y = hightemp)) +
geom_point() +
geom_smooth(se = FALSE) +
scale_y_continuous(breaks = seq(40,100,by = 10)) +
scale_x_continuous(breaks = seq(100,800,by = 100)) +
theme_bw() +
opts(title = my_title,plot.title=theme_text(size=title.size))
?opts
# Step 4
ggplot(data = melted_upper_tri, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
geom_text(aes(label = value), color = "black") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.40, 0.75),
legend.direction = "horizontal",
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed() +
labs(
title = "There is a strong positive correlation between high temperatures and volume of park visitors."
)
# Step 4
ggplot(data = melted_upper_tri, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
geom_text(aes(label = value), color = "black") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.40, 0.75),
legend.direction = "horizontal",
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed() +
ggtitle("There is a strong positive correlation between high temperatures and volume of park visitors.") +
xlab("l") +
ylab("l")
# Step 4
ggplot(data = melted_upper_tri, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white") +
geom_text(aes(label = value), color = "black") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "lab",
name = "Pearson\nCorrelation") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.40, 0.75),
legend.direction = "horizontal",
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
coord_fixed() +
labs(
title = "There is a strong positive correlation between high temperatures and volume of park visitors."
)
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
alpha = 0.25,
legend(fill = "blue")) +
theme_bw()
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
alpha = 0.25,
legend(rail.scale$volume,
fill = "blue")) +
theme_bw()
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
theme_bw()
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = rail.scale$hightemp,
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = rail.scale$volume,
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = rail.scale,
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = rail.scale,
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale$hightemp,
fill = rail.scale$hightem,
alpha = 0.25) +
geom_density(data = rail.scale$volume,
fill = rail.scale$volume,
alpha = 0.25) +
theme_bw()
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp, fill = "red"),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume, fill = "blue"),
fill = "blue",
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp, color = "red", fill = "red"),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume, color = "blue", fill = "blue"),
fill = "blue",
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp, color = "red"),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume, color = "blue"),
fill = "blue",
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp, color = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume, color = volume),
fill = "blue",
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp, color = "red"),
fill = hightemp,
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume, color = "blue"),
fill = volume,
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
color = "red",
fill = hightemp,
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
color = "blue",
fill = volume,
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
color = "red",
fill = rail.scale$hightemp,
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
color = "blue",
fill = rail.scale$volume,
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
scale_fill_identity(name = "Legend",
guide = "legend",
labels = c("High Temperature",
"Volume of Visitors")) +
theme_bw()
plot_1
?geom_ribbon
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
scale_fill_identity(name = "Legend",
guide = 'legend',
labels = c("High Temperature",
"Volume of Visitors")) +
theme_bw()
plot_1
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
scale_fill_identity(name = "Legend",
guide = 'legend',
labels = c("High Temperature",
"Volume of Visitors")) +
theme_bw()
plot_1
library(pander)
library(tidyverse)
library(mosaic)
library(reshape2)
library(plotly)
library(pander)
# Create a Correlation matirx
# Following example found here: "http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization"
olympic <- read_csv("./Data/Olympics.csv")
olympic$Medal[is.na(olympic$Medal)] <- "no medal"
ideal <-
olympic %>%
select(ID, Sex, Age, Height, Weight, Sport, Medal) %>%
na.omit() %>%
mutate(Medal_pts = case_when(
Medal == "Gold" ~ 3,
Medal == "Silver" ~ 2,
Medal == "Bronze" ~ 1,
TRUE ~ 0
))
View(ideal)
fav_stats(filter(data = ideal, Sex == 'M'))
fav_stats(filter(data = ideal$Age, Sex == 'M'))
ideal_m <- ideal %>% filter(Sex == 'M')
fav_stats(ideal_m$Age)
fav_stats(ideal_f$Age)
ideal_f <- ideal %>% filter(Sex == 'F')
fav_stats(ideal_f$Age)
stripchart(cars$dist, pch=16, method="stack")
library(car)
qqplot(cars$dist)
qqPlot(cars$dist)
abline(v=100,ity=2)
abline(v=100,lty=2)
abline(v=100,lty=2)
abline(v=100, lty=2)
?abline
abline(v=100)
wilcox.test(cars$dist, mu = 100, alternative = "two.sided")
wilcox.test(cars$dist, mu = 100, alternative = "two.sided")
stripchart(cars$dist, pch=16, method="stack")
abline(v=100, lty=2)
cars$dist - 100
sum(1:50)
with(subset(Duncan, type=="wc"), qqPlot(prestige))
with(subset(Duncan, type=="prof"), qqPlot(prestige))
wc <- subset(Duncan, type=="wc")
prof <- subset(Duncan, type=="prof")
wilcox.test(wc, prof, mu = 0, alternative = "two.sided", conf.level = 0.95)
wc
wilcox.test(wc$prestige, prof$prestige, mu = 0, alternative = "two.sided", conf.level = 0.95)
wilcox.test(wc$prestige, prof$prestige, mu = 0, alternative = "two.sided")
wilcox.test(wc$prestige, prof$prestige, mu = 0)
wilcox.test(wc$prestige, prof$prestige
wilcox.test(wc$prestige, prof$prestige, mu = 0, alternative = "greater")
wilcox.test(prof$prestige, wc$prestige, mu = 0, alternative = "greater")
Salaries
library(dplyr)
ml <- filter(Salaries, rank=="Prof", && sex=="Male")
ml <- filter(Salaries, rank=="Prof", & sex=="Male")
ml <- filter(Salaries, rank=="Prof" & sex=="Male")
fl <- filter(Salaries, rank=="Prof" & sex=="Female")
wilcox.test(fl$salary, ml$salary, mu=0, alternative="two.sided")
wilcox.test(ml$salary, fl$salary, mu=0, alternative="two.sided")
boxplot(Davis$weight,Davis$repwt, names=c("Weight","Reported"))
stripchart(Davis$weight-Davis$repwt, method="stack", pch=16, ylim=c(1,3))
library(mosaic)
Davis
View(David)
View(Davis)
wilcox.test(Davis$weight, Davis$repwt, mu = 0, alternative = "two.sided")
wilcox.test(Davis$repwt, Davis$weight, mu = 0, alternative = "two.sided")
wilcox.test(Davis$repwt, mu = 0, alternative = "two.sided")
wilcox.test(Davis$weight, mu = 0, alternative = "two.sided")
wilcox.test(Davis$repwt, Davis$weight, mu = 0, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
wilcox.test(Davis$weight, Davis$repwt, mu = 0, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
library(tidyverse)
<div style="padding-left:15px;">
$H_0: \mu_1 - \mu_2 = 0$ </br>
$H_a: \mu_1 - \mu_2 \neq 0$
</div>
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
library(tidyverse)
library(mosaic)
library(pander)
library(car)
library(DT)
library(pander)
library(mosaic)
library(pander)
library(lattice)
