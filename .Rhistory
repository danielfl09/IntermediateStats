scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
library(tidyverse)
library(leaflet)
library(ggrepel)
library(scales)
Rent <- read_csv("./Data/Rent.csv") %>%
na.omit() %>%
mutate(
Size = case_when(
Capacity < 50 ~ "Small",
Capacity < 100 ~ "Medium",
TRUE ~ "Large"
)
)
### Distance ~ Price ~ Gender
CheapNClose <-
Rent %>%
filter(Gender == "F") %>%
filter(Price < quantile(Rent$Price, 0.30)) %>%
filter(MilesToCampus < quantile(Rent$MilesToCampus, 0.30))
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_point() +
scale_x_continuous(breaks = seq(0,0.8,by=0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
?scales
library(scales)
install.packages("scales")
install.packages("scales")
library(tidyverse)
library(leaflet)
library(ggrepel)
library(scales)
Rent <- read_csv("./Data/Rent.csv") %>%
na.omit() %>%
mutate(
Size = case_when(
Capacity < 50 ~ "Small",
Capacity < 100 ~ "Medium",
TRUE ~ "Large"
)
)
### Distance ~ Price ~ Gender
CheapNClose <-
Rent %>%
filter(Gender == "F") %>%
filter(Price < quantile(Rent$Price, 0.30)) %>%
filter(MilesToCampus < quantile(Rent$MilesToCampus, 0.30))
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_point() +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_jitter() +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_jitter() +
geom_smoothe(se = FALSE) +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_jitter() +
geom_smooth(se = FALSE) +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
Rent %>%
filter(Gender == "F") %>%
ggplot(aes(MilesToCampus, Price, color = Gender, group = Gender)) +
geom_jitter() +
scale_x_continuous(breaks = seq(0,0.8,by = 0.1)) +
scale_y_continuous(labels = dollar_format()) +
facet_grid(Size ~ .) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
labs(
x = "Miles to Campus",
y = "Price",
color = "Gender"
)
install.packages("plotly")
install.packages("plotly")
library(plotly)
library(scales)
library(tidyverse)
library(leaflet)
library(ggrepel)
Rent %>% plot_ly(x = MilesToCampus, y = Price)
View(Rent)
Rent <- read_csv("./Data/Rent.csv") %>%
na.omit() %>%
mutate(
Size = case_when(
Capacity < 50 ~ "Small",
Capacity < 100 ~ "Medium",
TRUE ~ "Large"
)
)
Rent %>% plot_ly(x = MilesToCampus, y = Price)
View(Rent)
Rent %>% plot_ly(x = ~MilesToCampus, y = ~Price)
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
text = ~paste("Apartment: ", Apartment,
"$<br>Price: ", Price,
"$<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
size = ~Capacity,
colot = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
size = ~Capacity,
color = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
mode = scatter,
size = ~Capacity,
color = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
mode = scatterplot,
size = ~Capacity,
color = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
Rent %>% plot_ly(x = ~MilesToCampus,
y = ~Price,
mode = "scatter",
size = ~Capacity,
color = ~Price,
text = ~paste("Apartment: ", Apartment,
"<br>Price: ", Price,
"<br>Capacity: ", Capacity))
install.packages("shiny")
library(shiny)
runExample("01_hello")
library(mosaic)
View(Births78)
library(tidyverse)
sev <- Births78 %>% filter(year == 1978)
count(sev$day_of_week)
sev %>%
group_by(day_of_week) %>%
summarise()
sev %>%
group_by(day_of_week) %>%
summarise(Count = count())
sev %>%
group_by(day_of_week) %>%
summarise(Count = count(day_of_week))
wed <- Births78 %>% filter(wday == "Wed")
thu <- Births78 %>% filter(wday == "Thu")
t.test(wed, thu)
t.test(wed$births, thu$births)
library(tidyverse)
library(mosaic)
library(reshape2)
library(plotly)
library(pander)
# Add new columns for Weekday and Weekend in the style as the season columns
railtrail <- RailTrail %>%
mutate(
Weekday = case_when(
dayType == "weekday" ~ 1,
TRUE                 ~ 0
),
Weekend = case_when(
dayType == "weekend" ~ 1,
TRUE                 ~ 0
)
) %>%
select(-c(weekday, dayType))
rail.scale <- as.data.frame(scale(railtrail))
# Adjust layout of the graphs
hist(rail.scale$hightemp, col=rgb(1,0,0,0.5))
hist(rail.scale$volume, col=rgb(0,0,1,0.5), add=T)
box()
?hist()
# Adjust layout of the graphs
hist(rail.scale$hightemp, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, col=rgb(0,0,1,0.5), add=T)
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=10, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, col=rgb(0,0,1,0.5), add=T)
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, col=rgb(0,0,1,0.5), add=T)
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
density(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
# Adjust layout of the graphs
density(rail.scale$hightemp, col=rgb(1,0,0,0.5))
# Adjust layout of the graphs
density(rail.scale$hightemp)#, col=rgb(1,0,0,0.5))
# Adjust layout of the graphs
densityplot(rail.scale$hightemp, col=rgb(1,0,0,0.5))
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
theme_bw()
plot_1
?t.test()
# Student's t-Test
pander(t.test(railtrail$hightemp, railtrail$volume, mu = 0, alternative = "two.sided"))
# Faceted Density Plot
ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red",
alpha = 0.25) +
theme_bw()
ggplot() +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
theme_bw()
# Layered Density Plot of High Temperature and Volume of Visitors
plot_1 <- ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red") +#,alpha = 0.25) +
geom_density(data = rail.scale,
aes(x = volume),
fill = "blue",
alpha = 0.25) +
theme_bw()
# Faceted Density Plot
ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red") +
theme_bw()
# Faceted Density Plot
ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red")
# Faceted Density Plot
ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red") +
theme_bw()
# Faceted Density Plot
ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red") +
theme_dark()
# Faceted Density Plot
ggplot() +
geom_density(data = rail.scale,
aes(x = hightemp),
fill = "red") +
theme_bw()
# Adjust layout of the graphs
hist(rail.scale$hightemp, , breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, , breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
# Adjust layout of the graphs
hist(rail.scale$hightemp, , breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, , breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, , breaks=50, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=50, col=rgb(0,0,1,0.5), add=T)
box()
hist(rail.scale$volume, col=rgb(0,0,1,0.5), add=T)
# Adjust layout of the graphs
hist(rail.scale$hightemp, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20,xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20,xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20,xlim=c(-3,3), col=rgb(255,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20,xlim=c(-3,3), col=rgb(255,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
View(railtrail)
?scale()
View(plot_1)
library(tidyverse)
library(mosaic)
library(reshape2)
library(pander)
library(plotly)
install.packages("plotly")
library(tidyverse)
library(mosaic)
library(reshape2)
library(plotly)
library(pander)
# Add new columns for Weekday and Weekend in the style as the season columns
railtrail <- RailTrail %>%
mutate(
Weekday = case_when(
dayType == "weekday" ~ 1,
TRUE                 ~ 0
),
Weekend = case_when(
dayType == "weekend" ~ 1,
TRUE                 ~ 0
)
) %>%
select(-c(weekday, dayType))
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
rail.scale <- as.data.frame(scale(railtrail))
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
?legend
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temp", "Volume"), col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)) )
box()
?lty
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
legend("topleft", legend = c("High Temperature", "Volume"), col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)), lwd = 1)
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume"), col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)), lwd = 10)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume"), col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)), lwd = 5)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume", "Overlap"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5), rgb(1,0,1,0.5)), lwd = 5)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume", "Overlap"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5), rgb(0.128,0.63,0.185)), lwd = 5)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume", "Overlap"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5), rgb(128,63,185)), lwd = 5)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume", "Overlap"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5), "#803FB9"), lwd = 5)
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume", "Overlap"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5), "#803FB9"), lwd = 5, bg = rgb(0,0,0,0.1))
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume", "Overlap"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5), "#803FB9"), lwd = 5, bg = rgb(0,0,0))
box()
# Adjust layout of the graphs
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
box()
legend("topleft", legend = c("High Temperature", "Volume", "Overlap"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5), "#803FB9"), lwd = 5, bg = "#FFFFFF")
box()}
# Adjust layout of the graphs
output <- {
hist(rail.scale$hightemp, breaks=20, xlim=c(-3,3), col=rgb(1,0,0,0.5))
hist(rail.scale$volume, breaks=20, col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend = c("High Temperature", "Volume", "Overlap"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5), "#803FB9"), lwd = 5, bg = "#FFFFFF")
box()
}
output
print(output)
library(car)
library(mosaic)
install.packages("car")
library(car)
library(mosaic)
View(sleep)
x <- sleep[extra[group==1]-extra[group==2]]
x <- sleep[group==1-group==2]
x <- sleep[sleep$group==1-sleep$group==2]
